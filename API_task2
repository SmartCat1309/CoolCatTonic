using Microsoft.AspNetCore.Mvc; 
 
namespace Zadanie2_api.Controllers 
{ 
    [ApiController] 
    [Route("[controller]")] 
    public class WeatherForecastController : ControllerBase 
    { 
        private static List<string> Summaries = new() 
        { 
        "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" 
    }; 
 
        private readonly ILogger<WeatherForecastController> _logger; 
 
        public WeatherForecastController(ILogger<WeatherForecastController> logger) 
        { 
            _logger = logger; 
        } 
 
        [HttpGet] 
        public List<string> Get() 
        { 
            return Summaries; 
        } 
 
        [HttpPost] 
        public IActionResult Add(string name) 
        { 
            Summaries.Add(name); 
            return Ok(); 
        } 
 
        //Задание №1(1) 
        [HttpPut] 
        public IActionResult Update(int index, string name) 
        { 
            if (index < 0 || index >= Summaries.Count) 
            { 
                return BadRequest("Неверный идекс! Введите другой."); 
            } 
 
            Summaries[index] = name; 
            return Ok(); 
        } 
 
        //Задание №1(2) 
        [HttpDelete] 
        public IActionResult Delete(int index) 
        { 
            if (index < 0 || index >= Summaries.Count) 
            { 
                return BadRequest("Неверный идекс! Введите другой."); 
            } 
 
            Summaries.RemoveAt(index); 
            return Ok(); 
        } 
 
        //Задание №2 
        [HttpGet("{index}")] 
        public IActionResult Get(int index) 
        { 
            if (index < 0 || index >= Summaries.Count) 
            { 
                return BadRequest("Неверный идекс! Введите другой."); 
            } 
            string name = Summaries[index]; 
            return Ok(name); 
        } 
 
        //Задание №3 
        [HttpGet("find-by-mane")] 
        public IActionResult Get(string name) 
        { 
            int count = 0; 
            foreach (string s in Summaries) 
            { 
                if (s == name) 
                    count += 1; 
            } 
            return Ok(); 
        } 
 
        //Задание №4 (a,b,c,d) 
        [HttpGet] 
        public IActionResult GetAll(int? sortStrategy) 
        { 
            if (sortStrategy == null) 
            { 
                return Ok(); 
            } 
            else 
            if (sortStrategy == 1) 
            { 
                Summaries.Sort(); 
                return Ok(); 
            } 
            else 
            if (sortStrategy == -1) 
            { 
                Summaries.Sort(); 
                Summaries.Reverse(); 
                return Ok(); 
            } 
            else 
                return BadRequest("Некорректное значение парамета sortStrategy!"); 
        } 
    } 
}
